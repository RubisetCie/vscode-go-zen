name: Build Release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Extension release version'
        required: true
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Stamp Version
        run: |
          cat package.json | jq --arg VER "${{ github.event.inputs.release_version }}" '.version=$VER' > /tmp/package.json 
          cp /tmp/package.json ./package.json
          npm ci
          npm run vscode:prepublish

      - name: Package extension
        run: npx vsce package -o "./go-${{ env.EXT_VERSION }}.vsix"

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.EXT_VERSION }}
          draft: false
          prerelease: ${{env.EXT_ISPREVIEW == 1}}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./go-${{ env.EXT_VERSION }}.vsix
          asset_name: go-${{ env.EXT_VERSION }}.vsix
          asset_content_type: application/zip

      - name: Publish
        if: env.EXT_ISPREVIEW != 1 && github.repository == 'golang/vscode-go'
        run: npx vsce publish -i "./go-${{ env.EXT_VERSION }}.vsix" -p "${{ secrets.VSCE_TOKEN }}"

